# complicated by the fact that only 1 database instance per file may 
# exist per process.

test_true(objectp(Database.EJDB))
test_true(programp(Database.EJDB.Database))
test_true(programp(Database.EJDB.Collection))

test_define_program(db, [[
  object db;
  string oid;
  void create()
  {
    db = Database.EJDB.Database("test.ejdb", Database.EJDB.JBOWRITER|Database.EJDB.JBOTRUNC|Database.EJDB.JBOCREAT);
  }
  ]])

test_do(add_constant("dbo", db()))
test_false(dbo->db->get_collection("foo"))
test_true(equal(dbo->db->get_collections(), ({})))
test_true(objectp(dbo))
test_true(functionp(dbo->db->create_collection))
test_true(objectp(dbo->db->create_collection("bar")))))
test_eq(sizeof(dbo->db->get_collections()), 1)
test_do([[
  string oid = dbo->db->get_collection("bar")
  ->save((["foo": 1, "bar": "2"])); 
  dbo->oid = oid;
  return oid;
  ]])
test_true(stringp(dbo->oid))
test_true(mappingp(dbo->db->get_collection("bar")->load(dbo->oid)))
test_true([[
  mapping x = dbo->db->get_collection("bar")->load(dbo->oid);
  m_delete(x, "_id");
  return equal(x, (["foo": 1, "bar": "2"]));
 ]])
